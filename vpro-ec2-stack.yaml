- hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: importing variables
      include_vars: vpcinfo

    - name: importing variables
      include_vars: vprostacksetup
    - name: creating key file for ec2 instance
      ec2_key:
        name: vprokey
        region: "{{region}}"
      register: vprokey_output

    - name: save private key info into pem file
      copy:
        content: "{{vprokey_output.key.private_key}}"
        dest: "./loginkey_vpro.pem"
        mode: 0600
      when: vprokey_output.changed

    - name: load balancer security group
      ec2_group:
        name: ELB_SG
        description: My first ELB to allow port 80 from everywhere
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
      register: ELB_SG_Details
    - name: EC2 security group
      ec2_group:
        name: vprostack_sg
        description: allow ssh and http from elb and bastion
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no

        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            group_id: "{{ELB_SG_Details.group_id}}"
          - proto: tcp
            from_port: 22
            to_port: 22
            group_id: "{{bastionSGID}}"
      register: vprostack_SG_Details
      ignore_errors: True

    - name: updating security group with its SG
      ec2_group:
        name: vprostack-sg
        description: allow ssh and http from elb and bastion
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules:
          - proto: all
            group_id: "{{vprostack_SG_Details.group_id}}"

    - name: creating nginx instance
      ec2_instance:
        key_name: vprokey
        instance_type: t2.micro
        region: "{{region}}"
        image_id: "{{nginx_ami}}"
        wait: yes
        wait_timeout: 500
        tags:
          name: web01
          project: Vprofile-stack
          owner: VivekJain
        exact_count: 1
        security_group: "{{vprostack_SG_Details.group_id}}"
        vpc_subnet_id: "{{prisubid1}}"
      
    - name: creating tomcat instance
      ec2_instance:
        key_name: vprokey
        instance_type: t2.micro
        region: "{{region}}"
        image_id: "{{tomcat_ami}}"
        wait: yes
        wait_timeout: 500
        tags:
          name: tomcat
          project: Vprofile-stack-tomcat
          owner: VivekJain_tomcat
        security_group: "{{vprostack_SG_Details.group_id}}"
        vpc_subnet_id: "{{prisubid1}}"
        assign_public_ip: yes
      register: tomcat_output
      state: present

    - name: creating rabbitMQ instance
      ec2_instance:
        key_name: vprokey
        instance_type: t2.micro
        region: "{{region}}"
        image_id: "{{rmq_ami}}"
        wait: yes
        wait_timeout: 300
        tags:
          name: RabbitMQ
          project: Vprofile-stack-RabbitMQ
          owner: VivekJain_RabbitMQ
        exact_count: 2
        security_group: "{{vprostack_SG_Details.group_id}}"
        vpc_subnet_id: "{{prisubid1}}"
      register: rabbitMQ_output
      state: present

    - name: creating MYSQL instance
      ec2_instance:
        key_name: vprokey
        instance_type: t2.micro
        region: "{{region}}"
        image_id: "{{mysql_ami}}"
        wait: yes
        wait_timeout: 300
        tags:
          name: MYSQL
          project: Vprofile-stack-MYSQL
          owner: VivekJain_Mysql

        security_group: "{{vprostack_SG_Details.group_id}}"
        vpc_subnet_id: "{{prisubid1}}"
        assign_public_ip: yes
      register: MYSQL_output
      state: present
    - debug:
        var: MYSQL_output